FORMAT: 1A
HOST: https://api.acommerceid.com/

# Valkyrie Middleware

Web services standard for aCommerce Channel Middleware.

## Request Headers




## Authentication [/login]

Before making any request, client needs to send details about channel's API token or key.

### Login [POST]

Submit login information (username and password, or API key)

+ Request (application/json)

        {
            "apiKey" : "d46a5acb5210117746a087a1046bb22aedccd3e4"
        }

+ Response 201 (application/json)

    + Body

            {
                "token" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlLZXkiOiJkNDZhNWFjYjUyMTAxMTc3NDZhMDg3YTEwNDZiYjIyYWVkY2NkM2U0In0.0I1PjGZ0QVL3yWzywZD2kzE9vTOpIxA7yfNJGfmqcXw"
            }

+ Response 401 (application/json)
   
    + Body
    
            {
                "message": "invalid key"
            }

+ Response 551 (application/json)
    When there is an error from the channel web service.

    + Body
            
            {
                "code" : "500",
                "message" :"Internal server error",
                "body": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ClientMessage><resultCode>200</resultCode><message>Internal Server Error</message></ClientMessage>'
            }

## Inventory Collection [/stocks] 

### Update sku qty [PATCH]

Update sku qty to market place

+ Request (application/json)

    + Headers
        
            x-channel-token: {CHANNEL_TOKEN}
            x-partner-id: {PARTNER_ID}
            Authorization: Bearer {TOKEN}

    + Body

            [{
                "sku": "item0",
                "updatedTime": "2015-08-27T14:15:24.284Z",
                "qty": "10"
            },
            {
                "sku": "item01",
                "updatedTime": "2015-08-27T13:40:16.695Z",
                "qty": "0"
            },
            {
                "sku": "item02",
                "updatedTime": "2015-08-27T13:40:16.695Z",
                "qty": "0"
            }]

+ Response 200 (application/json)

    + Body

            [{
                "sku": "item0",
                "qty": "10"
            },
            {
                "sku": "item01",
                "qty": "0"
            },
            {
                "sku": "item02",
                "qty": "0"
            }]

+ Response 551 (application/json)
    When there is an error from the channel web service.

    + Body
            
            {
                "code" : "500",
                "message" :"Internal server error",
                "body": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ClientMessage><resultCode>200</resultCode><message>Internal Server Error</message></ClientMessage>'
            }
            
## Products Collection [/products{?partnerId}]

### List All Products [GET]

Get all products from channel.

+ Parameters
    + partnerId (number, optional) - ID of the Partner Number to filter on

+ Request

    + Headers
    
            x-channel-token: {CHANNEL_TOKEN}
            x-partner-id: {PARTNER_ID}
            Authorization: Bearer {TOKEN}

+ Response 200 (application/json)

    + Headers
    
            X-Total-Count: 5000
            

    + Body
    
            [
                {
                    "sku" : "ABCDEFGH",
                    "active" : true,
                    "itemId" : "1234-1234",
                    "brand" : "Mitsuzuyota",
                    "type" : "group",
                    "lastSyncCpms" : null,
                    "lastSyncChannel" : null,
                    "subBrand" : null,
                    "model" : "K1528900",
                    "manufacturer" : "Mitsuzuyota",
                    "productId" : "B00HSHI9MO",
                    "productIdType" : "ASIN",
                    "productName" : "Test product",
                    "productDescription" : "",
                    "productHighlights" : [],
                    "productDimension" : "7 x 3 x 16",
                    "productWeight" : "0.6",
                    "packageWeight" : "0.75",
                    "packageLength" : "3",
                    "packageWidth" : "7",
                    "packageHeight" : "16",
                    "productWarranty" : null,
                    "categories" : [],
                    "variations" : [],
                    "dateCreated" : "2016-05-03T08:52:37.755Z",
                    "dateUpdate" : null
                }
            ]

### Create a New Product [POST]

Create a new product to channel.


+ Request (application/json)

    + Headers
    
            x-channel-token: {CHANNEL_TOKEN}
            x-partner-id: {PARTNER_ID}
            Authorization: Bearer {VALKYRIE_TOKEN}
    
    + Body

            {
                "sku" : "ABCDEFGH",
                "active" : true,
                "itemId" : "1234-1234",
                "brand" : "Mitsuzuyota",
                "type" : "group",
                "lastSyncCpms" : null,
                "lastSyncChannel" : null,
                "subBrand" : null,
                "model" : "K1528900",
                "manufacturer" : "Mitsuzuyota",
                "productId" : "B00HSHI9MO",
                "productIdType" : "ASIN",
                "productName" : "Test product",
                "productDescription" : "",
                "productHighlights" : [],
                "productPrice" : "10000",
                "productQty" : "3",
                "productDimension" : "7 x 3 x 16",
                "productWeight" : "0.6",
                "packageWeight" : "0.75",
                "packageLength" : "3",
                "packageWidth" : "7",
                "packageHeight" : "16",
                "productWarranty" : null,
                "categories" : 1001,
                "variations" : [],
                "dateCreated" : "2016-05-03T08:52:37.755Z",
                "dateUpdate" : null,
                "attributes": {
                    "opticalDrive" : false,
                    "ukuranHdd" : "2",
                    "ukuranLayarLaptop" : "10‚Äù",
                    "jumlahRam" : "4",
                    "tipeProsesor" : "Pendulum 3"
                },
                "asDetail": "After service information address or contact",
                "rtngExchDetail": "Return/Exchange information"
            }

+ Response 201 (application/json)

    + Headers

            Location: /products/2

    + Body

            {
                "channelSku" : "ABCDEFGH"
            }

+ Response 551 (application/json)
    When there is an error from the channel web service.

    + Body
            
            {
                "code" : "500",
                "message" :"Internal server error",
                "body": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ClientMessage><resultCode>200</resultCode><message>Internal Server Error</message></ClientMessage>'
            }
            
## Orders Collection [/orders{?status,from,to}]

### List All Orders [GET]

Get all orders from channel.

+ Parameters
    + status (enum[string], optional)
        Status of the order
        + Members
            + `NEW`
            + `ORDERED`
            + `READY_TO_SHIP`
            + `IN_TRANSIT`
            + `FAILED_TO_DELIVER`
            + `CANCELLED`
            + `REJECTED`
            + `COMPLETED`
            + `VERIFY_FAILED`
    + from (string, optional)
        Specifying date range. Date in ISO8601 format (e.g. 2016-06-09)
    + to (string, optional)
        Specifying date range. Date in ISO8601 format (e.g. 2016-06-09)

+ Request
    + Headers
        
            x-channel-token: {CHANNEL_TOKEN}
            x-partner-id: {PARTNER_ID}
            Authorization: Bearer {TOKEN}

+ Response 200 (application/json)

    + Headers
    
            X-Total-Count: 5000
            
    + Body

            [
                {
                    "orderCreatedTime": "2015-06-18T10:30:40Z",
                    "orderId": "085695798275182",
                    "paymentType": "CCOD",
                    "shippingType": "STANDARD_2_4_DAYS",
                    "grossTotal": 120000-,
                    "currUnit": "IDR",
                    "customer": {
                        "addressee":"Cinta Andarini Puspaningrum",
                        "address1":"Sahid Sudirman Center lantai 17 A Jl Jend Sudirman no 86",
                        "postalCode":"10220",
                        "country":"Indonesia",
                        "phone":"(021) 27889210"
                    },
                    "shipmentInfo": {
                        "addressee":"Cinta Andarini Puspaningrum",
                        "address1":"Sahid Sudirman Center lantai 17 A",
                        "address2":"Jl Jend Sudirman no 86",
                        "subDistrict":"",
                        "district":"Karet",
                        "city":"Jakarta Pusat",
                        "province":"DKI Jakarta",
                        "postalCode":"10220",
                        "country":"Indonesia",
                        "phone":"(021) 27889210",
                        "email":"cinta@acommerce.asia"
                    },
                    "orderItems": [
                        {
                            "sku": "NIK64254110000000L",
                            "qty": 2,
                            "subTotal": 60000
                        },
                        {
                            "sku": "NIK64254110000000M",
                            "qty": 2,
                            "subTotal": 60000
                        }
                    ]
                }
            ]


+ Response 551 (application/json)
    When there is an error from the channel web service.

    + Body
            
            {
                "code" : "500",
                "message" :"Internal server error",
                "body": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ClientMessage><resultCode>200</resultCode><message>Internal Server Error</message></ClientMessage>'
            }

## Update Orders [/orders/{orderId}]

### Update an Orders Status [PATCH]

Update status of an order to market place

+ Parameters
    + orderId (string, required) - ID of the order

+ Request (application/json)

    + Headers
        
            x-channel-token: {CHANNEL_TOKEN}
            x-partner-id: {PARTNER_ID}
            Authorization: Bearer {TOKEN}

    + Body

            [
              {
                "orderId": "085695798275182",
                "acommerceId": "ACOM085695798275182",
                "partnerId": 1,
                "orderCreatedTime": "2015-11-17T08:26:38Z",
                "orderUpdatedTime": "2015-11-18T04:47:13Z",
                "orderStatus": [
                  {
                    "orderStatus": "NEW",
                    "updatedTime": "2015-11-17T08:26:38Z",
                    "orderStatusDetail": null
                  },
                  {
                    "orderStatus": "IN_PROGRESS",
                    "updatedTime": "2015-11-18T04:47:13Z",
                    "orderStatusDetail": null
                  }
                ],
                "orderDetailedStatus": [
                  {
                    "orderDetailedStatus": "NEW",
                    "updatedTime": "2015-11-17T08:26:38Z"
                  },
                  {
                    "orderDetailedStatus": "READY_TO_PICK",
                    "updatedTime": "2015-11-17T09:19:56Z"
                  },
                  {
                    "orderDetailedStatus": "QC_CHECKED",
                    "updatedTime": "2015-11-18T03:48:54Z"
                  },
                  {
                    "orderDetailedStatus": "READY_TO_SHIP",
                    "updatedTime": "2015-11-18T03:49:37Z"
                  },
                  {
                    "orderDetailedStatus": "IN_TRANSIT",
                    "updatedTime": "2015-11-18T04:47:13Z"
                  }
                ],
                "shipPackage": [
                  {
                    "trackingId": "142054924480001",
                    "weight": "0.150",
                    "deliveryAttempted": 1,
                    "paymentType": "CASH_ON_DELIVERY",
                    "shippingType": "STANDARD_2_4_DAYS",
                    "shipmentReceiver": null,
                    "statusHistory": [
                      {
                        "shippingStatus": "PREPARING_DELIVERY",
                        "updatedTime": "2015-11-17T09:19:56Z",
                        "shippingLocation": null,
                        "shippingDetail": null,
                        "shippingUpdatedTime": null
                      },
                      {
                        "shippingStatus": "IN_TRANSIT",
                        "updatedTime": "2015-11-18T04:47:13Z",
                        "shippingLocation": null,
                        "shippingDetail": null,
                        "shippingUpdatedTime": null
                      }
                    ]
                  }
                ]
              }
            ]

+ Response 200 (application/json)

    + Body

            {
                "orderId" : "085695798275182",
                "trackingId" : "142054924480001"
            }

+ Response 551 (application/json)
    When there is an error from the channel web service.

    + Body
            
            {
                "code" : "500",
                "message" :"Internal server error",
                "body": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ClientMessage><resultCode>200</resultCode><message>Internal Server Error</message></ClientMessage>'
            }
            
## Accepting Orders [/orders/{orderId}/accept]

### Accept an order [POST]

Accept an order.

+ Parameters
    + orderId (string, required) - ID of the order


+ Request
    + Headers
        
            x-channel-token: {CHANNEL_TOKEN}
            x-partner-id: {PARTNER_ID}
            Authorization: Bearer {TOKEN}
            
+ Response 201 (application/json)

    + Body
    
            {
                "message": "Order accepted"
            }

+ Response 551 (application/json)
    When there is an error from the channel web service.

    + Body
            
            {
                "code" : "500",
                "message" :"Internal server error",
                "body": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ClientMessage><resultCode>200</resultCode><message>Internal Server Error</message></ClientMessage>'
            }
            
## Categories Collection [/categories]

### Get categories [GET]

Get categories and mappings. If "acommerce" is null then it's not mapped yet.

+ Response 200 (application/json)

    + Body
            
            [
                {
                    "acommerce": 1231,
                    "catId": 9886,
                    "name": "Clothing & Accessories"
                },
                {
                    "acommerce": 1232,
                    "catId": 9889,
                    "name": "Baby"
                },
                {
                    "acommerce": null,
                    "catId": 10004,
                    "name": "Rain Wear"
                }
            ]

+ Response 551 (application/json)
    When there is an error from the channel web service.

    + Body
            
            {
                "code" : "500",
                "message" :"Internal server error",
                "body": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ClientMessage><resultCode>200</resultCode><message>Internal Server Error</message></ClientMessage>'
            }
            
## Category Mapping [/categories/{channelCategoryId}/{acommerceCategoryId}]

+ Parameters
    + channelCategoryId (number) - ID of the channel's category ID
    + acommerceCategoryId (number) - ID of aCommerce's category ID
    
### Update category mapping [POST]

Set or replace categories mapping.

+ Response 200 (application/json)

+ Response 551 (application/json)
    When there is an error from the channel web service.

    + Body
            
            {
                "code" : "500",
                "message" :"Internal server error",
                "body": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ClientMessage><resultCode>200</resultCode><message>Internal Server Error</message></ClientMessage>'
            }
            

## Attributes Collection [/attributes]

### Update attribute mapping database [POST]

Set or replace attributes mapping.

+ Request (application/json)

        [
            {
                "acommerce": "productName",
                "elevenia": "prdNm"
            },
            {
                "acommerce": "productDescription",
                "elevenia": "htmlDetail"
            },
            {
                "acommerce": "pproductWeight",
                "elevenia": "prdWeight"
            }
        ]

+ Response 200 (application/json)

+ Response 551 (application/json)
    When there is an error from the channel web service.

    + Body
            
            {
                "code" : "500",
                "message" :"Internal server error",
                "body": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ClientMessage><resultCode>200</resultCode><message>Internal Server Error</message></ClientMessage>'
            }